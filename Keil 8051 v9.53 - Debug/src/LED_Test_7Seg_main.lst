C51 COMPILER V9.53.0.0   LED_TEST_7SEG_MAIN                                                01/02/2018 13:30:44 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LED_TEST_7SEG_MAIN
OBJECT MODULE PLACED IN .\src\LED_Test_7Seg_main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\pnisbet
                    -\Documents\Silabs_Workspace\LED_Test_7Seg\src\LED_Test_7Seg_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL
                    -(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\pnisbet\Documents\Silab
                    -s_Workspace\LED_Test_7Seg\inc;C:\Users\pnisbet\Documents\Silabs_Workspace\LED_Test_7Seg\inc\config;C:/SiliconLabs/Simpli
                    -cityStudio/v4/developer/sdks/8051/v4.0.9//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/805
                    -1/v4.0.9//Device/EFM8SB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//Lib/efm8_capsense;C:/Silicon
                    -Labs/SimplicityStudio/v4/developer/sdks/8051/v4.0.9//Device/EFM8SB1/efm8_capsense/device_layer) PRINT(.\src\LED_Test_7Se
                    -g_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\LED_Test_7Seg_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/LED_Test_7Seg_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8SB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          #include "cslib_config.h"
  16          #include "cslib.h"
  17          // [Generated Includes]$
  18          
  19          //Defines by Peter//
  20          #define touchCounter    65// works well enough just not too sensitive 75
  21          
  22          //Function Prototypes//
  23          void number1(void);
  24          void number2(void);
  25          void number3(void);
  26          void number4(void);
  27          void number5(void);
  28          void number6(void);
  29          void number7(void);
  30          void number8(void);
  31          void number9(void);
  32          void number0(void);
  33          void numberDisplay(uint8_t countIndex);
  34          
  35          //-----------------------------------------------------------------------------
  36          // SiLabs_Startup() Routine
  37          // ----------------------------------------------------------------------------
  38          // This function is called immediately after reset, before the initialization
  39          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  40          // useful place to disable the watchdog timer, which is enable by default
  41          // and may trigger before main() in some instances.
  42          //-----------------------------------------------------------------------------
  43          void SiLabs_Startup(void) {
  44   1      
  45   1      // $[SiLabs Startup]
  46   1              /*
  47   1               // WDTE (Watchdog Timer Enable) = DISABLED (Disable Watchdog Timer.)
  48   1               */
  49   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
C51 COMPILER V9.53.0.0   LED_TEST_7SEG_MAIN                                                01/02/2018 13:30:44 PAGE 2   

  50   1      
  51   1      // [SiLabs Startup]$
  52   1      }
  53          
  54          //Pin Definitions//
  55          SI_SBIT(LEDA, SFR_P0, 1);
  56          SI_SBIT(LEDB, SFR_P0, 2);
  57          SI_SBIT(LEDC, SFR_P0, 3);
  58          SI_SBIT(LEDD, SFR_P0, 4);
  59          SI_SBIT(LEDE, SFR_P0, 5);
  60          SI_SBIT(LEDF, SFR_P0, 6);
  61          SI_SBIT(LEDG, SFR_P0, 7);
  62          
  63          SI_SBIT(LED0, SFR_P1, 1);
  64          
  65          //-----------------------------------------------------------------------------
  66          // main() Routine
  67          // ----------------------------------------------------------------------------
  68          int main(void) {
  69   1              uint16_t numberCount = 0;
  70   1              uint16_t pressCount = 0;
  71   1              bool pressValid = 0;
  72   1      
  73   1              // Call hardware initialization routine
  74   1              enter_DefaultMode_from_RESET();
  75   1      
  76   1              //PCA0CPH0 = 0x0F;
  77   1      
  78   1              while (1) {
  79   2      // $[Generated Run-time code]
  80   2                      // -----------------------------------------------------------------------------
  81   2                      // If low power features are enabled, this will either put the device into a low
  82   2                      // power state until it is time to take another scan, or put the device into a
  83   2                      // low-power sleep mode if no touches are active
  84   2                      // -----------------------------------------------------------------------------
  85   2                      CSLIB_lowPowerUpdate();
  86   2      
  87   2                      // -----------------------------------------------------------------------------
  88   2                      // Performs all scanning and data structure updates
  89   2                      // -----------------------------------------------------------------------------
  90   2                      CSLIB_update();
  91   2      
  92   2      // [Generated Run-time code]$
  93   2      
  94   2                      if (CSLIB_isSensorDebounceActive(0) && pressValid == 0) {
  95   3                              numberCount++;
  96   3      
  97   3                              if (numberCount > 9) {
  98   4                                      numberCount = 9;
  99   4                              }
 100   3      
 101   3                              LED0 = 1;
 102   3                              pressValid = 1;
 103   3                              pressCount = 0;
 104   3                      } else if (CSLIB_isSensorDebounceActive(1) && pressValid == 0) {
 105   3                              numberCount--;
 106   3      
 107   3                              if (numberCount < 0) {
 108   4                                      numberCount = 0;
 109   4                              }
 110   3      
 111   3                              LED0 = 1;
 112   3                              pressValid = 1;
C51 COMPILER V9.53.0.0   LED_TEST_7SEG_MAIN                                                01/02/2018 13:30:44 PAGE 3   

 113   3                              pressCount = 0;
 114   3                      } else {
 115   3                              LED0 = 0;
 116   3                              pressCount++;
 117   3      
 118   3                              if (pressCount > touchCounter) {
 119   4                                      pressCount = 0;
 120   4                                      pressValid = 0;
 121   4                              }
 122   3                      }
 123   2      
 124   2                      numberDisplay(numberCount);
 125   2      
 126   2              }
 127   1      }
 128          
 129          void number1(void) {
 130   1              LEDA = 0;
 131   1              LEDB = 1;
 132   1              LEDC = 1;
 133   1              LEDD = 0;
 134   1              LEDE = 0;
 135   1              LEDF = 0;
 136   1              LEDG = 0;
 137   1      }
 138          
 139          void number2(void) {
 140   1              LEDA = 1;
 141   1              LEDB = 1;
 142   1              LEDC = 0;
 143   1              LEDD = 1;
 144   1              LEDE = 1;
 145   1              LEDF = 0;
 146   1              LEDG = 1;
 147   1      }
 148          
 149          void number3(void) {
 150   1              LEDA = 1;
 151   1              LEDB = 1;
 152   1              LEDC = 1;
 153   1              LEDD = 1;
 154   1              LEDE = 0;
 155   1              LEDF = 0;
 156   1              LEDG = 1;
 157   1      }
 158          
 159          void number4(void) {
 160   1              LEDA = 0;
 161   1              LEDB = 1;
 162   1              LEDC = 1;
 163   1              LEDD = 0;
 164   1              LEDE = 0;
 165   1              LEDF = 1;
 166   1              LEDG = 1;
 167   1      }
 168          
 169          void number5(void) {
 170   1              LEDA = 1;
 171   1              LEDB = 0;
 172   1              LEDC = 1;
 173   1              LEDD = 1;
 174   1              LEDE = 0;
 175   1              LEDF = 1;
C51 COMPILER V9.53.0.0   LED_TEST_7SEG_MAIN                                                01/02/2018 13:30:44 PAGE 4   

 176   1              LEDG = 1;
 177   1      }
 178          
 179          void number6(void) {
 180   1              LEDA = 1;
 181   1              LEDB = 0;
 182   1              LEDC = 1;
 183   1              LEDD = 1;
 184   1              LEDE = 1;
 185   1              LEDF = 1;
 186   1              LEDG = 1;
 187   1      }
 188          
 189          void number7(void) {
 190   1              LEDA = 1;
 191   1              LEDB = 1;
 192   1              LEDC = 1;
 193   1              LEDD = 0;
 194   1              LEDE = 0;
 195   1              LEDF = 0;
 196   1              LEDG = 0;
 197   1      }
 198          
 199          void number8(void) {
 200   1              LEDA = 1;
 201   1              LEDB = 1;
 202   1              LEDC = 1;
 203   1              LEDD = 1;
 204   1              LEDE = 1;
 205   1              LEDF = 1;
 206   1              LEDG = 1;
 207   1      }
 208          
 209          void number9(void) {
 210   1              LEDA = 1;
 211   1              LEDB = 1;
 212   1              LEDC = 1;
 213   1              LEDD = 1;
 214   1              LEDE = 0;
 215   1              LEDF = 1;
 216   1              LEDG = 1;
 217   1      }
 218          
 219          void number0(void) {
 220   1              LEDA = 1;
 221   1              LEDB = 1;
 222   1              LEDC = 1;
 223   1              LEDD = 1;
 224   1              LEDE = 1;
 225   1              LEDF = 1;
 226   1              LEDG = 0;
 227   1      }
 228          
 229          void numberDisplay(uint8_t countIndex) {
 230   1              switch (countIndex) {
 231   2              case 1:
 232   2                      number1();
 233   2                      break;
 234   2              case 2:
 235   2                      number2();
 236   2                      break;
 237   2              case 3:
 238   2                      number3();
C51 COMPILER V9.53.0.0   LED_TEST_7SEG_MAIN                                                01/02/2018 13:30:44 PAGE 5   

 239   2                      break;
 240   2              case 4:
 241   2                      number4();
 242   2                      break;
 243   2              case 5:
 244   2                      number5();
 245   2                      break;
 246   2              case 6:
 247   2                      number6();
 248   2                      break;
 249   2              case 7:
 250   2                      number7();
 251   2                      break;
 252   2              case 8:
 253   2                      number8();
 254   2                      break;
 255   2              case 9:
 256   2                      number9();
 257   2                      break;
 258   2              default:
 259   2                      number0();
 260   2              }
 261   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    364    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
